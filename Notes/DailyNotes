Automation Testing :
----------------------------
Testing the Application feature with help of Automation tool 

Tool :
---------
Protector
Sahi
Sahi pro
Appium - mobile Automation Testing
Selenium WebDriver -- Web Application Testing
Ranorex -Desktop based Application 

Manual Testing DisAdvantage :
------------------------------
1. reuired more resouces 
2.Regression Testing --- suite time consuming 
3. Cross browser Testing --- 10 min *4 = 40 min - time consuming & its difficult to implements 
4. Test Cycle duration -increase 

Automation Testing Adv :
-----------------------------
1. Reuqired less resources
2. Regression Testing and Cross Browser Testing -required less time and easy to implements
3. Test Cycle duration -decrease


Selenium WebDriver Tool :
----------------------------
ADV Selenium :
------------
1.Open source Tool -- freely available / no licenece required 
2.selenium support multiple lang : C#,Peral,Ruby,Python,Java,JavaScript...
3.Selenium support multiple O.S. : Windows ,Linux ....
4.Cross Browser Testing --- easily implemet by using selenium

DisAdv Selenium :
----------------------
1. Selenium we can automate only Web Application 
   we can not automate standalone /desktop application Ex.calculator
2.we can not automate Captcha and Barcode 
3.File Upload and file download task -- we can not handle 
  we can use third party tool : AutoIT/Robot class 
4.we can not perform Adhoc testing 


===============================
Maven Project 
Maven -Build Management tool 


Selenium WebDriver + java 

Automation Script - Test cases stpes convert code 

Selenium Architecure :

------------------------

Search context (I)-extends--WebDriver (I)--implements -
-RemoteWebDriver (C) --extends-ChromiumDriver (C)--ChromeDriver (C)/EdgeDriver(C) multiple Browser driver classes 

==========
driver.manage().window().maximize();

driver.navigate().to("url");
driver.navigate().back();
driver.navigate().forward();
driver.navigate().refresh();

driver.close(); // current window -close
driver.quit();  // current + All open window - close

====================================================

TC001_Login_functionality

Open Browser and Launch Application Url
Enter valid Email Id
Enter Valid Password
Click on login button
verify --->Homepage title 


WebElement :  
Anything on Webpage -- WebElement
Interface --- sendkeys()

Ex .Text filed ,Button ,links ,Image ,Checkbox,DropDown


Locators :using locators we can identify the webelement

1.ID

WebElement Email=driver.findElement(By.id("id attribute value"));
Email.sendKeys("test@gmail.com");


2.Name

WebELement email=driver.findElement(By.name("name attribute value"));

email.sendKeys("Test");

3.ClassName
4.tagname
5.Xpath
6.Css selector
7.Linktext
8.partiallinktext

DOM - Document Object model

Task Url : https://demo.guru99.com/test/newtours/register.php

==================================
Locator :Id/Name

Id/name 

Xpath Locator :
-------------------
Absolute xpath :(/)
Navigation start from parent node navigate to immidiate child 
1
2
3
3.5
4
5
Ele
Xpath --- lengthly 
UI changes -- Absolute xpath expression collpse


WebElement email=driver.findElement(By.xpath("/html/body/div[1]/div[1]/div[1]/div/div/div/div[2]/div/div[1]/form/div[1]/div[1]/input"));
email.sendKeys("Test");


Relative XPath (//)
-----------------
Element --- parent node any child node navigation 
        ---child node 
        
        DOM ---
           tagname : anything after <
             ex. <input
                 <div
                 <a
                 <li
                 <br
           attribute name
           attribute value
           Ex .
           attribute name="attribute value"
           name="login"
           value="1"
           
           text : >define<
                ex . >Forgotten password?<
                
    a.Xpath By Attribute :
    ----------------------
    //tagname[@attributename='attribute value']
    //input[@id='email']
    
    WebElement Email=driver.findElement(By.xpath("//input[@id='email']"));
    Email.sendKeys("Test@gmail.com");
    
    
    
    b.Xpath By text() :
    -------------------
    //tagname[text()='text value']
    //a[text()='Forgotten password?']
    
    WebElement FP=driver.findElement(By.xpath("//a[text()='Forgotten password?']"));
    FP.click();
    
    
    c.Xpath By contains()
    ----------------------------
    //tagname[contains(@attributename,'static value')]
    
    WebELement element=driver.findElement(By.xpath("//button[contains(@id,"u_0_9")]"));
    
    //tagname[contains(text(),'partial value text')]
    
    WebElement element=driver.findElement(By.xpath("//a[contains(text(),'Forgotten ')]"));
    
    d.Xpath By Index  
    ------------------------------
    (xpath expression)[index]
    
    WebElement element=driver.findElement(By.xpath("(//input[@type='text'])[2]"));         

============================================
How to handle dropdown 

Select class ---- dropdown element tagname select 

WebElement country=driver.findElement(By.xpath("Xpath expression"));
Select select=new Select(country);
select.selectByindex(10);

==================================================

How to capture screenshot ?

Full page Screenshot :
--------------------------------
TakesScreenshot ts=driver;
File src=ts.getscreenshotAS(outPutType.FILE);
File destn=new File("location\\Test.png");
FileHandler.copy(src,destn);


Element Screenshot


package com.Test;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.io.FileHandler;

import io.github.bonigarcia.wdm.WebDriverManager;

public class ScreenshotcaptureTest {

	public static void main(String[] args) throws Exception {
		
		WebDriverManager.chromedriver().setup();
		ChromeDriver driver=new ChromeDriver();
		driver.get("https://demo.guru99.com/test/newtours/register.php");
		driver.manage().window().maximize();
		
		// How to capture Screenshot -- Full Page
		
		TakesScreenshot ts=driver;
		File Src=ts.getScreenshotAs(OutputType.FILE);
		File destn=new File("C:\\Users\\Dell\\eclipse-workspace\\Batch22_AutomationFramework\\ScreenShot\\Test.png");
		FileHandler.copy(Src, destn);
		
		// How to capture Screenshot -WebElement
		
		WebElement Register=driver.findElement(By.xpath("//img[@src='images/mast_register.gif']"));
		File Src1=Register.getScreenshotAs(OutputType.FILE);
		File Destn1=new File("C:\\Users\\Dell\\eclipse-workspace\\Batch22_AutomationFramework\\ScreenShot\\Register.png");
        FileUtils.copyFile(Src1, Destn1);
        
        

	}

}
==============================================
pop handle in selenium 

Alert --? 

Simple Alert :
warning message /notification 
Prompt Alert :
user input accept 
Confirmation Alert :
confirmation message -- Yes 


Alert alt=driver.switchto().alert();

alt.gettext();
alt.accept(); // click OK button 

alt.dismiss(); // click Cancel button 

alt.sendKeys("Test");

WebDriverManager.chromedriver().setup();
		ChromeDriver driver=new ChromeDriver();
		driver.get("https://demo.guru99.com/test/delete_customer.php");
        driver.manage().window().maximize();
        
        
        driver.findElement(By.xpath("//input[@name='cusid']")).sendKeys("12345678");
        driver.findElement(By.xpath("//input[@name='submit']")).click();
        
        //Alert -Handle 
        Alert alt=driver.switchTo().alert();
        String Textonalert=alt.getText();
        System.out.println(Textonalert);
        
      //  alt.dismiss(); // click Cancel button 
        alt.accept(); // click Ok button 
        
        
        String TextonAlert=alt.getText();
        System.out.println(TextonAlert);
        alt.accept();
        
        
        //alt.sendKeys("Test");
       // alt.accept();

        Library.handleAlert(driver).getText();
        Library.handleAlert(driver).accept();
        Library.handleAlert(driver).dismiss();
        
===============================
Scrolling

JavaScriptExecutor js=driver
//top-bottom
js.executeScript("window.ScrollBy(0,300)","");

//bottom-top
js.executeScript("window.ScrollBy(0,-300)","");

pixel

Webelement

WebDriverManager.chromedriver().setup();
		ChromeDriver driver=new ChromeDriver();
		driver.get("https://demo.guru99.com/test/newtours/register.php");
		driver.manage().window().maximize();
		
		//Scrolling -pixel
		JavascriptExecutor js=driver;
		//top-bottom
		js.executeScript("window.scrollBy(0,300)", "");
		
		Thread.sleep(3000); // 3 second 
		
		//bottom-top
		js.executeScript("window.scrollBy(0,-300)", "");
		
		Thread.sleep(3000); // 3 second 
		
		//Scrolling -WebElement 
		WebElement Submit=driver.findElement(By.xpath("//input[@name='submit']"));
		js.executeScript("arguments[0].scrollIntoView();", Submit);
		
		
		//Library.scrolltoElement(driver, Submit);

js.executeScript("window.scrollBy(0,document.body.scrollHeight)
document.body.scrollHeight - max scroll pixel size 

==============================================

How to send Testdata from excelsheet

Apache POI -Dependancy -pom.xml 
Common
ooxml

String Path="location";
FileInutStream file=new FileInputStream(Path);
XSSFWorkbook wb=new XSSFWorkbook(file);
String data=wb.getsheet("Sheet1").getrow(0).getcell(4).getstringcellvalue();
driver.findElement(By.xpath("")).sendKeys(data);

Task : 

String path="C:\\Users\\Dell\\eclipse-workspace\\Batch28\\TestData\\Data.xlsx";
        FileInputStream file=new FileInputStream(path);
        XSSFWorkbook wb=new XSSFWorkbook(file);
        
       String data= wb.getSheet("Sheet1").getRow(0).getCell(0).getStringCellValue();
	   System.out.println(data);
	
	   String data1=wb.getSheet("Sheet1").getRow(0).getCell(1).getStringCellValue();
	   System.out.println(data1);
	   
	   
	   //Browser Open
	   WebDriverManager.chromedriver().setup();
	   ChromeDriver driver=new ChromeDriver();
	   driver.get("https://www.facebook.com/");
	   driver.manage().window().maximize();
	   
	   driver.findElement(By.xpath("//input[@name='email']")).sendKeys(data);
	   
	   driver.findElement(By.xpath("//input[@name='pass']")).sendKeys(data1);
	
=============================================
String path="C:\\Users\\Dell\\eclipse-workspace\\Batch28\\TestData\\Data.xlsx";
        FileInputStream file=new FileInputStream(path);
        XSSFWorkbook wb=new XSSFWorkbook(file);
        
       String data= wb.getSheet("Sheet1").getRow(0).getCell(0).getStringCellValue();
	   System.out.println(data);
	
	   String data1=wb.getSheet("Sheet1").getRow(0).getCell(1).getStringCellValue();
	   System.out.println(data1);
	   
	   String Data4=wb.getSheet("Sheet1").getRow(0).getCell(2).getStringCellValue();
	   System.out.println(Data4);
	   
//	   double data2=wb.getSheet("Sheet1").getRow(0).getCell(2).getNumericCellValue();
//	   System.out.println(data2); //1.2345678E7
//	   
//	   String Data3=String.valueOf(data2); //1.2345678E7
//	   
//	   String Data4=Data3.replace(".", "").replace("E7", "");
//	   System.out.println(Data4);
	   
	   //Browser Open
	   WebDriverManager.chromedriver().setup();
	   ChromeDriver driver=new ChromeDriver();
	   driver.get("https://www.facebook.com/");
	   driver.manage().window().maximize();
	   
	   driver.findElement(By.xpath("//input[@name='email']")).sendKeys(data);
	   
	   driver.findElement(By.xpath("//input[@name='pass']")).sendKeys(data1);
====================================================
Frame and Iframe 

Frame : dev webpage vertically and horizontilly seprate 
        frameset tag 
        
        deprecated from HTML5 
        
Iframe : inline frame .
         Advetismnet /other source information         

driver.switchto().frame(int index);
driver.switchto().frame(String name /Id);
driver.switchto().frame(WebElement element);


	WebDriverManager.chromedriver().setup();
		ChromeDriver driver=new ChromeDriver();
		driver.get("https://ui.vision/demo/webtest/frames/");
		driver.manage().window().maximize();
		
		// Frame Handle 
		
	   driver.switchTo().frame(0); // Mainpage- Frame1
	   WebElement text1=driver.findElement(By.xpath("//input[@name='mytext1']"));
	   text1.sendKeys("Test123");
	   
	   driver.switchTo().defaultContent(); // Frame1- MainPage
	   WebElement Frame2=driver.findElement(By.xpath("//frame[@src='frame_2.html']"));
	   driver.switchTo().frame(Frame2); // Mainpage -- Frame2
	   WebElement text2=driver.findElement(By.xpath("//input[@name='mytext2']"));
	   text2.sendKeys("Test123");
	   
	   driver.switchTo().defaultContent(); // Frame2 -- Mainpage
	   
	   //mainpage--outterframe--innerframe
	   
	   driver.switchTo().frame(2); // Mainpage-- frame3outterframe
	   driver.findElement(By.xpath("//input[@name='mytext3']")).sendKeys("Test123");
	   
	   WebElement innerframe=driver.findElement(By.tagName("iframe"));
	   driver.switchTo().frame(innerframe); // outterframe--innerframe
	   driver.findElement(By.xpath("(//div[@class='AB7Lab Id5V1'])[1]")).click();
	   
	   
	   //innerframe--outterframe
	   driver.switchTo().parentFrame(); 
	   //ouuterframe-mainpage
	   driver.switchTo().defaultContent();
	   
	===================================================
	TestNG -- Test Managment tool /Testng framework
	          Test Next genration 
	        
	       @BeforeMethod   
	       @Test  
	       @AfterMethod 
	       
	       priority , invocationcount=2,enabled=false,dependsonMethod
	       groups 
	       
	       15 TC --- Functional Test -- PO review -- classify 3 CR 2 Regression -Automate
	       
	       minor release -- Mini Regression suite -CR -- 40 
	       Major release -- Regression suite - R +CR 
	       
	       100 --- 60 R -- 40 CR 
	       
	       Runner file --- testng.xml ---> Add Test class 
	       
	       CrossBrowser Test --- @Parameter --->
	       
	       testng.xml -- include /exclude
	       
	       Report : emailable report/index.html 
	       
	=======================================================
	
	@BeforeSuite   
	public void BS() {
	      
	}   
	@BeforeTest
	@BeforeClass
	@BeforeMethod
	
	@Test
	public void Test1(){
	
	 //
	}
	
	@AfterMethod
	@AfterClass
	@AfterTest
	@AfterSuite
	
	 ==================================================      
	   package com.Test;

import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class Testng_session_1 {

	ChromeDriver driver;

	@BeforeMethod
	public void BrowserLaunch() {
		
		WebDriverManager.chromedriver().setup();
		driver=new ChromeDriver();
		driver.get("https://www.facebook.com/");
		driver.manage().window().maximize();
	}
	
	@Test
	public void LoginTest() {
		
		driver.findElement(By.xpath("//input[@id='email']")).sendKeys("Test123");
		driver.findElement(By.xpath("//input[@id='pass']")).sendKeys("12345678");
		driver.findElement(By.xpath("//button[@name='login']")).click();
	}
	
	@Test
	public void LoginTest_1() {
		
		driver.findElement(By.xpath("//input[@id='email']")).sendKeys("Test123");
		driver.findElement(By.xpath("//input[@id='pass']")).sendKeys("12345678");
		driver.findElement(By.xpath("//button[@name='login']")).click();
	}
	
	@Test
	public void LoginTest_2() {
		
		driver.findElement(By.xpath("//input[@id='email']")).sendKeys("Test123");
		driver.findElement(By.xpath("//input[@id='pass']")).sendKeys("12345678");
		driver.findElement(By.xpath("//button[@name='login']")).click();
	}
	
	@AfterMethod
	public void tearDown() {
		
		driver.close();
	}
	

}
======================================================
package com.Test;

import org.testng.annotations.Test;

public class Testng_session_keyword {

	
	@Test(priority=2,invocationCount=3)
	public void abc() {
		System.out.println("Test ABC");
	}
	
	@Test(priority=1)
	public void xyz() {
		System.out.println("Test XYZ");
	}

	
	@Test(priority=0)
	public void pqr() {
		System.out.println("Test PQR");
	}

	
	@Test(priority=-4,enabled=false)
	public void rts() {
		System.out.println("Test RTS");
	}

}
===============================================
	
	@Test
	public void LoginTest() {
		System.out.println("Login Test");
		//Assert.assertTrue(false);
	}
	
	@Test(dependsOnMethods="LoginTest")
	public void HomePageTest() {
		System.out.println("HomePage Test");
	}
}

===================================================

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="DemoSuite">
  <test thread-count="5" name="DemoTest">
    <classes>
      <class name="com.Test.Testng_dependsONMethod"/>
      <class name="com.Test.Testng_session_1">
      <methods>
      <include name="LoginTest"></include>
      </methods>
      </class>
      <class name="com.Test.Testng_session_keyword">
      <methods>
      <exclude name="abc"></exclude>
      </methods>
      </class>
    </classes>
  </test> <!-- DemoTest -->
</suite> <!-- DemoSuite -->

=============================================================
groups

feature TC --- 10 --- Peer review --12 TC ---Feature Test 

--RD --Test Report /TC Review PO -- classify TC  2 TC _CR/3 TC_R/Client demo 

----major /minor rlease 


Regression --60
Critical Regression --40

TC -100 
================================================

	@Test(groups= {"Critical Regression"})
	public void m1() {
		System.out.println("Test M1");
	}
	
	@Test(groups= {"Regression"})
	public void m2() {
		System.out.println("Test M2");
	}
	
	@Test(groups= {"Regression"})
	public void m3() {
		System.out.println("Test M3");
	}
	
	

}
=================
@Test(groups= {"Critical Regression"})
	public void a1() {
		System.out.println("Test A1");
	}
	
	@Test(groups= {"Critical Regression"})
	public void a2() {
		System.out.println("Test A2");
	}
	
	@Test(groups= {"Regression","Critical Regression"})
	public void a3() {
		System.out.println("Test A3");
	}
	
	@Test(groups= {"Regression"})
	public void a4() {
		System.out.println("Test A4");
	}
	
	===========================================
	<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
<groups>
<run>
<include name="Critical Regression"></include>
</run>
</groups>
  <test thread-count="5" name="Test">
    <classes>
      <class name="com.Test.Testng_groups"/>
      <class name="com.Test.Testng_groups1"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->
	
	=============================================
	<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="RegressionSuite">
<groups>
<run>
<include name="Regression"></include>
</run>
</groups>
  <test thread-count="5" name="RegressionTest">
    <classes>
      <class name="com.Test.Testng_groups"/>
      <class name="com.Test.Testng_groups1"/>
    </classes>
  </test> <!-- RegressionTest -->
</suite> <!-- RegressionSuite -->
	===========================================
	Master Suite  : 
	
	
	<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="MasterSuite">
  <test thread-count="5" name="MasterTest">
    <classes>
      <class name="com.Test.Testng_groups"/>
      <class name="com.Test.Testng_groups1"/>
    </classes>
  </test> <!-- MasterTest -->
</suite> <!-- MasterSuite -->
	
=====================================================
BaseClass

WebDriver driver;
	
	
	@Parameters("BrowserName")
	@BeforeMethod
	public void setUp(String BrowserName) {
		
		if(BrowserName.equalsIgnoreCase("Chrome")) {
			WebDriverManager.chromedriver().setup();
			driver=new ChromeDriver();
		}
		
		else if(BrowserName.equalsIgnoreCase("Edge")) {
			
			WebDriverManager.edgedriver().setup();
			driver=new EdgeDriver();
		}
		
		driver.get("https://www.facebook.com/");
		driver.manage().window().maximize();
		
	}

	
	@AfterMethod
	public void tearDown() {
		
		//driver.close();
	}
}


Test Class
==================
public class LoginTest extends BaseClass{
	
	
	@Test
	public void verifyLoginTest() {
		
		driver.findElement(By.xpath("//input[@id='email']")).sendKeys("Test");
	}

}


XML file 
==================

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="CrossBrowserSuite">
  <test thread-count="5" name="CrossBrowserTest_chrome">
  <parameter name="BrowserName" value="Chrome"></parameter>
    <classes>
      <class name="com.CrossBrowserTest.LoginTest"/>
    </classes>
  </test> <!-- CrossBrowserTest -->
  
  <test thread-count="5" name="CrossBrowserTest_Edge">
  <parameter name="BrowserName" value="Edge"></parameter>
    <classes>
      <class name="com.CrossBrowserTest.LoginTest"/>
    </classes>
  </test> <!-- CrossBrowserTest -->
</suite> <!-- CrossBrowserSuite -->
	
==========================================================
Assert (Hard Assert)
------------------
Verify result of an Operation
Assert.assertequals(Actaul,Expected); // Pass/fail
when Assert fail --- next test case steps execution abort 
-- no need to call AssertAll method

@Test
	public void TC_001() {
		
		System.out.println("Browser Open");
		System.out.println("valid Email Id");
		System.out.println("valid Password ");
		System.out.println("Click Login Button");
		
		//verify
		String Expected="ABC";
		
		//driver.getTitle();
		String Actual="ABC"; // Homepage page
		
		Assert.assertEquals(Actual, Expected);
		
		System.out.println("Test Demo");
		
	

Soft Assert (Verify)
---------------------
Verify result of an Operation
we need to create Object of Soft Assert class
SoftAssert soft=new SoftAssert();
soft.Assertequals(Actual,Expected); // Pass /Fail
soft.assertAll(); // Exception -Bucket --Ommit --console

System.out.println("Browser Open");
		System.out.println("Email");
		System.out.println("Password");
		System.out.println("Login Button");
		
		//verify
		
		SoftAssert soft=new SoftAssert();
		String Expected="Test1";
		String Actual="Test";
		
		soft.assertEquals(Actual, Expected);
		soft.assertTrue(false);
		
		System.out.println("Test demo");
		System.out.println("Test Bug");
		
		soft.assertAll();
============================================
Actions : Mouse movement and keyboard Action

Actions act=new Actions(driver);

//mouse hover +click () 

//Browser Open
		WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://www.facebook.com/");
		driver.manage().window().maximize();
		
		//Element --mouseHover + Click
		
		Actions act=new Actions(driver);
		WebElement FP=driver.findElement(By.xpath("//a[text()='Forgotten password?']"));
		act.moveToElement(FP).click().build().perform();
		
		
//Right click+click (Element)	
//DoubleClick

//Browser Open
		WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://demo.guru99.com/test/simple_context_menu.html");
		driver.manage().window().maximize();
		
		// Right click +click (WebElement)
		
		Actions act=new Actions(driver);
		//WebElement RCE=driver.findElement(By.xpath("//span[text()='right click me']"));
		//WebElement quit=driver.findElement(By.xpath("//span[text()='Quit']"));
		
		//act.contextClick(RCE).click(quit).build().perform();
		
		//double click 
		WebElement DCE=driver.findElement(By.xpath("//button[text()='Double-Click Me To See Alert']"));
		act.doubleClick(DCE).build().perform();
		
		driver.quit();
		
	===============================================
	
	Actions act=new Actions(driver);
	act.dragandDrop(srcelement,detnelement).build().perform();
	
	
	WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://www.facebook.com/");
		driver.manage().window().maximize();
		
		//Email ---UpperCase -Keyboard -Value 
		
		Actions act=new Actions(driver);
		
		WebElement Email=driver.findElement(By.xpath("//input[@id='email']"));
		
		act.keyDown(Email, Keys.SHIFT).sendKeys("bugspotter").keyUp(Keys.SHIFT).build().perform();
		
		
		//ctrl+a
		act.keyDown(Keys.CONTROL).sendKeys("a").keyUp(Keys.CONTROL).build().perform();
		//ctrl+c
		
		act.keyDown(Keys.CONTROL).sendKeys("c").keyUp(Keys.CONTROL).build().perform();
		//element hit
		driver.findElement(By.xpath("//input[@id='pass']")).click();
		
		//ctrl+v
		act.keyDown(Keys.CONTROL).sendKeys("v").keyUp(Keys.CONTROL).build().perform();
		
====================================================

POM (Page Object Model) with PageFactory 


webpage -- 10 webpage --Webelement -- 10 Pom Class
design pattern -- Element repo

Login Webpage --- LoginPom Class 
HomePage webpage --- HomePagePom Class

Test Class -- Pom Class ---initilize --Test class
PageFactory Class
iniElements();

========================================
//Encapsulation = 
	//define
	
	@FindBy(how=How.XPATH,using="//input[@id='email']")
	private WebElement Email;
	
	@FindBy(how=How.XPATH,using="//input[@name='pass']")
	private WebElement password;
	
	
	@FindBy(how=How.XPATH,using="//button[@name='login']")
	private WebElement LoginBtn;

   //public getter methods 
	
	public WebElement getEmail() {
		return Email;
	}


	public WebElement getPassword() {
		return password;
	}


	public WebElement getLoginBtn() {
		return LoginBtn;
	}


--------------------------

WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://www.facebook.com/");
		driver.manage().window().maximize();
		
		
		LoginPom login=PageFactory.initElements(driver, LoginPom.class);
		
		//login.getEmail().sendKeys("Test@gmail.com");
		//login.getPassword().sendKeys("12345678");
		//login.getLoginBtn().click();
		
		Library.custom_SendKeys(login.getEmail(), "Test@gmail.com");
	    Library.custom_SendKeys(login.getPassword(), "12345678");
	    Library.custom_Click(login.getLoginBtn());
	    
	    ===============================
	    
	public static void custom_SendKeys(WebElement element,String Value) {
		
		if(element.isEnabled()) {
			element.sendKeys(Value);
		}else {
			System.out.println("Element is not Enabled");
		}
		
	}
	
	public static void custom_Click(WebElement element) {
		
		
		if(element.isDisplayed()) {
			element.click();
		}else {
			System.out.println("Element is not displayed");
		}
		
	}    
	    
	===================================
	
	driver.getwindowhandle(); // String -- parent window ID
	
	Set<String> AllId=driver.getwindowhandles();  // Set<String>  -- Parent window + Child window ID
	
	List<String> list=new ArrayList<String>(AllId);
	
	list.get(0); // parent window id
	list.get(1); // Child Browser window id
	
	driver.switchto().window(list.get(1));
	
	// Element -- Actions 
	===========================
		WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://demo.guru99.com/popup.php");
		driver.manage().window().maximize();
		
		//
		String PID=driver.getWindowHandle(); // Parent window ID
		System.out.println(PID);
		
		driver.findElement(By.xpath("//a[text()='Click Here']")).click();
		
		Set<String> AllID=driver.getWindowHandles(); // Parent window ID+ Child Window ID
		System.out.println(AllID);
		
		List<String> list=new ArrayList<String>(AllID);
		
		String CWID=list.get(1); // Child Browser Window ID
		System.out.println(CWID);
		
		driver.switchTo().window(CWID);
		
		driver.findElement(By.xpath("//input[@name='emailid']")).sendKeys("Test");
		
		//driver.close(); // Current browser window
		
		//driver.quit(); // current+All open window close
		
		driver.switchTo().window(PID);
	
	
	===============================
	
	WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://demo.guru99.com/popup.php");
		driver.manage().window().maximize();
		
		//
		String PID=driver.getWindowHandle(); // Parent window ID
		System.out.println(PID);
		
		driver.findElement(By.xpath("//a[text()='Click Here']")).click();
		
		Set<String> AllID=driver.getWindowHandles(); // Parent window ID+ Child Window ID
		System.out.println(AllID);
		
		Iterator<String> IT=AllID.iterator();
		
		while(IT.hasNext()) {
			
			String ID=IT.next();
			
			if(!PID.equals(ID)) {
			
				driver.switchTo().window(ID);
				driver.findElement(By.xpath("//input[@name='emailid']")).sendKeys("Test");
				
			}
			
		}
		
	
	
	
	
	    
	    
	    
















		
	
	
	
	
	
	
		
		
		
					
		



















	
	














	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	
	
	
	
	
	
	
	
	   
	   
	
	












	
	
	
	









